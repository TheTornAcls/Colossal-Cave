ROOT=..\..\..
IS_16=1
IS_OEM=1
!include $(ROOT)\win\apps\apps.mk 

# International mods
# NOTE: INTL_SCR, INTL_EXE and LANG are external macros set by international

!IFNDEF LANG
RES_DIR=.\messages\usa
!IFDEF DBCS
RES_DIR=.\messages\$(DBCS)
!ENDIF
!ELSE
RES_DIR=$(INTL_SRC)\$(LANG)\apps\cardfile
EXE_DIR=$(INTL_EXE)
!ENDIF

!ifdef OS2
CFLAGS=-c -AM -PLM -G2sw -Oas -Zpe -DOS2 -Fo$@
RCFLAGS=-DOS2
!else
CFLAGS=-c -AM -PLM -G2sw -Oas -Zpe -Fo$@
RCFLAGS=
!endif
LFLAGS=

!ifdef CVW
CFLAGS= -c -AM -PLM -G2sw -Zipe -Fo$@ -Od -W3
LFLAGS=$(LFLAGS) /CO
!endif

AFLAGS=/Zm /c
BLD=.

default: target
#INTL mods
!IFNDEF LANG
target:  $(BLD)\cardfile.exe
!ELSE
target: $(BLD)\cardfile.$(LANG)
!ENDIF

#INTL mods
!IFNDEF LANG
cardfile.rc: $(RES_DIR)\cardfile.rc
    copy $(RES_DIR)\cardfile.rc

cardfile.rcv: $(RES_DIR)\cardfile.rcv
    copy $(RES_DIR)\cardfile.rcv

cardfile.dlg: $(RES_DIR)\cardfile.dlg
    copy $(RES_DIR)\cardfile.dlg

ecda.dlg: $(RES_DIR)\ecda.dlg
    copy $(RES_DIR)\ecda.dlg

cardfile.res:  cardfile.rc cardfile.rcv cardfile.dlg cardfile.ico ecda.dlg
    rc $(RCFLAGS) -r cardfile.rc
!ELSE
cardfile.res: $(RES_DIR)\cardfile.res
    copy $(RES_DIR)\cardfile.res
!ENDIF

$(BLD)\init.obj: init.c
    cl $(CFLAGS) -NT _INIT init.c

$(BLD)\insert.obj: insert.c
    cl $(CFLAGS) -NT _INSERT insert.c

$(BLD)\register.obj: register.c
    cl $(CFLAGS) -NT _INIT register.c

$(BLD)\main.obj: main.c
    cl $(CFLAGS) -NT _TEXT main.c

$(BLD)\print.obj: print.c
    cl $(CFLAGS) -NT _PRINT print.c

$(BLD)\page.obj: page.c
    cl $(CFLAGS) -NT _PAGE page.c

$(BLD)\dragdrop.obj: dragdrop.c
    cl $(CFLAGS) -NT _FILE dragdrop.c

$(BLD)\file.obj: file.c
    cl $(CFLAGS) -NT _FILE file.c

$(BLD)\read.obj: read.c
    cl $(CFLAGS) -NT _READ read.c

$(BLD)\write.obj: write.c
    cl $(CFLAGS) -NT _WRITE write.c

$(BLD)\index.obj:  index.c
    cl $(CFLAGS) -NT _INDEX index.c

$(BLD)\input.obj: input.c
    cl $(CFLAGS) -NT _INPUT input.c

$(BLD)\fixmenu.obj: fixmenu.c
    cl $(CFLAGS) -NT _INPUT fixmenu.c

$(BLD)\card.obj: card.c
    cl $(CFLAGS) -NT _INPUT card.c

$(BLD)\object.obj: object.c
    cl $(CFLAGS) -NT _OBJECT object.c

$(BLD)\find.obj: find.c
    cl $(CFLAGS) -NT _FIND find.c

$(BLD)\lstrfns.obj: ..\common\lstrfns.c
    cl $(CFLAGS) -NT _FIND -DSTR -DCMP -DCPY -DINSENS ..\common\lstrfns.c

$(BLD)\indb.obj: indb.c 
    cl $(CFLAGS) -NT _DLGBOX indb.c

$(BLD)\dial.obj: dial.c
    cl $(CFLAGS) -NT _DIAL dial.c

$(BLD)\picture.obj: picture.c 
    cl $(CFLAGS) -NT _FILE picture.c

$(BLD)\special.obj: special.c 
    cl $(CFLAGS) -NT _SPECIAL special.c

$(BLD)\indos2.obj: indos2.asm
    mlx $(AFLAGS) indos2.asm 

$(BLD)\indos.obj: indos.asm
    mlx $(AFLAGS) indos.asm 

$(BLD)\cardfile.exe:  $(BLD)\index.obj $(BLD)\cardfile.def \
    $(BLD)\input.obj $(BLD)\fixmenu.obj $(BLD)\file.obj $(BLD)\read.obj \
    $(BLD)\write.obj $(BLD)\indb.obj $(BLD)\indos.obj $(BLD)\special.obj\
    $(BLD)\picture.obj $(BLD)\card.obj cardfile.res $(BLD)\lstrfns.obj \
    $(BLD)\page.obj $(BLD)\print.obj $(BLD)\main.obj $(BLD)\indos2.obj \
    $(BLD)\insert.obj $(BLD)\find.obj $(BLD)\init.obj $(BLD)\register.obj\
    $(BLD)\object.obj $(BLD)\dial.obj \
    $(BLD)\dragdrop.obj $(BLD)\cardfile.lnk
    link $(LFLAGS) @cardfile.lnk
    mapsym cardfile
    rc $(RCFLAGS) cardfile.res

!   ifdef OS2
    exehdr /newfiles cardfile.exe
!   endif

iclean:
    del *.res
    del *.rc
    del *.dlg

$(BLD)\cardfile.$(LANG): iclean cardfile.res
    copy $(EXE_DIR)\cardfile.exe cardfile.$(LANG)
    rc $(RCFLAGS) cardfile.res cardfile.$(LANG)
